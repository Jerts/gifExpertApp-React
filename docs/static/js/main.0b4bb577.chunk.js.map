{"version":3,"sources":["componentss/AddCategory.js","componentss/GifGridItem.js","helpers/getGif.js","componentss/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","Value","setValue","onSubmit","e","preventDefault","categories","type","value","onChange","target","onFocus","onContextMenu","alert","GifGridItem","url","title","className","href","rel","src","alt","getGif","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","Images","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAElBC,mBAAS,wBAFS,mBAErCC,EAFqC,KAE9BC,EAF8B,KAwB5C,OACI,0BAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFN,GAAc,SAAAO,GAAU,OAAKL,GAAL,mBAAeK,OACvCJ,EAAS,MAKL,2BACIK,KAAK,OACLC,MAAOP,EACPQ,SAzBc,SAACL,GACvBF,EAASE,EAAEM,OAAOF,QAyBVG,QAtBU,WAClBT,EAAS,KAsBDU,cAnBgB,SAACR,GACzBA,EAAEC,iBACFQ,MAAM,wCChBDC,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MAE9B,OACI,yBAAKC,UAAU,wDAEX,uBAAGC,KAAMH,EAAKL,OAAO,SAASS,IAAI,uBAC9B,yBAAKC,IAAKL,EAAKM,IAAKL,KAExB,2BAAIA,K,uBCRHM,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZT,EAFY,iDAEoCU,UAAUF,GAF9C,8DAGCG,MAAMX,GAHP,cAGZY,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GAAD,MAAQ,CAE1BC,GAAKD,EAAIC,GACTjB,MAAQgB,EAAIhB,MACZD,IAAMiB,EAAIE,OAAOC,iBAAiBpB,QAVpB,kBAcXe,GAdW,4CAAH,sDCGNM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZvB,mBAAS,CAC/B6B,KAAO,GACPQ,SAAU,IAJwB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA2BtC,OApBAC,qBAAU,WAENlB,EAAOC,GACFkB,MAAM,SAAAC,GASHH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAIvB,CAACd,IAEIe,EDvBwBK,CAAapB,GAAhCqB,EAFuB,EAE5Bf,KAAaQ,EAFe,EAEfA,QAEpB,OACI,oCACI,gCAAOd,EAAP,KACEc,GAAW,cACb,yBAAKpB,UAAU,aAEP2B,EAAOb,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIa,IAAKb,EAAIC,IACLD,UEYjBc,EA1BM,WAEjB,IAFuB,EAIa9C,mBAFf,CAAC,kBAFC,mBAIhBM,EAJgB,KAIJP,EAJI,KAUvB,OACI,oCACI,4CACA,kBAAC,EAAD,CACIA,cAAgBA,IAEpB,6BAEQO,EAAWyB,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CAASsB,IAAKtB,EAAUA,SAAWA,S,MChB3DwB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.0b4bb577.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [Value, setValue] = useState('Inserta una busqueda')\n    \n    const handleInputChange = (e) => {\n        setValue(e.target.value);\n    };\n\n    const handleOnFocus = () => {\n        setValue('');\n    };\n\n    const handleOnContextMenu = (e) => {\n        e.preventDefault();\n        alert('Jsjsjs NO se puede copiar krnal')\n    }\n\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        setCategories(categories => [Value, ...categories]);\n        setValue('');\n    }\n    \n    return (\n        <form onSubmit={handleOnSubmit}>\n            <input \n                type='text'\n                value={Value}\n                onChange={handleInputChange}\n                onFocus={handleOnFocus}\n                onContextMenu={handleOnContextMenu}\n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const GifGridItem = ({url, title}) => {\n    \n    return (\n        <div className=\"card animate__animated animate__fadeIn animate__slow\">\n\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src={url} alt={title}/>\n            </a>\n            <p>{title}</p>\n\n\n        </div>\n    )\n}\n","\n\nexport const getGif = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=eORxlnjzCqq1CVCTC0PZ47BLKNwX1E3x`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map((img)=>({\n        \n        id : img.id,\n        title : img.title,\n        url : img.images.downsized_medium.url\n\n    }));\n\n    return gifs;\n\n};","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import { getGif } from '../helpers/getGif';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:Images, loading} = useFetchGifs(category);\n    \n    return (\n        <>\n            <h3> { category } </h3>\n            { loading && 'Cargando...'}\n            <div className=\"card-grid\">\n                {\n                    Images.map(img => (\n                        <GifGridItem \n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                    \n                }\n            </div>\n            \n        </>\n    )\n\n}\n","import { useState, useEffect } from \"react\";\nimport {getGif} from \"../helpers/getGif\";\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setState] = useState({\n        data : [],\n        loading : true\n    });\n\n    useEffect(()=>{\n\n        getGif(category)\n            .then( imgs => {\n                // setTimeout(()=>{\n                    \n                //     setState({\n                //         data: imgs,\n                //         loading: false\n                //     })\n\n                // },1000);\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            });\n\n    },[category]);//Este último argumento es la dependencia de useEffect, en caso de que la categoría \n                  //(que esta en las props) del componente cambioe, se ejecuta de nuevo el useEffect\n    return state;\n\n};","import React , {useState} from 'react';\nimport { AddCategory } from './componentss/AddCategory';\nimport { GifGrid } from './componentss/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const initialState = ['One Punch Man'];\n\n    const [categories, setCategories] = useState(initialState);\n\n    // const handleAgregar = () => {\n    //     setCategories(cats => ['Evangelion', ...cats]);\n    // };\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory \n                setCategories={ setCategories }\n            />\n            <hr/>\n                {\n                    categories.map( category =>(\n                        <GifGrid key={category} category={ category }/>\n                    )) \n                }\n        </>\n    );\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}